==9192== Memcheck, a memory error detector
==9192== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9192== Using Valgrind-3.17.0.GIT and LibVEX; rerun with -h for copyright info
==9192== Command: ./corewar ../CORECHECKER/champs/bytecode/tchupka.cor
==9192== Parent PID: 9188
==9192== 
==9192== Invalid write of size 4
==9192==    at 0x100003006: ld (in ./corewar)
==9192==    by 0x100002251: game_in_cycle (in ./corewar)
==9192==    by 0x100002566: game_logic (in ./corewar)
==9192==    by 0x10000134B: start_game (in ./corewar)
==9192==    by 0x10000150F: main (in ./corewar)
==9192==  Address 0x10080e0dc is 748 bytes inside an unallocated block of size 4,157,936 in arena "client"
==9192== 
==9192== Invalid read of size 1
==9192==    at 0x100002034: read_op (in ./corewar)
==9192==    by 0x100002125: game_in_cycle (in ./corewar)
==9192==    by 0x100002566: game_logic (in ./corewar)
==9192==    by 0x10000134B: start_game (in ./corewar)
==9192==    by 0x10000150F: main (in ./corewar)
==9192==  Address 0x204913301 is not stack'd, malloc'd or (recently) free'd
==9192== 
==9192== 
==9192== Process terminating with default action of signal 11 (SIGSEGV)
==9192==  Access not within mapped region at address 0x204913301
==9192==    at 0x100002034: read_op (in ./corewar)
==9192==    by 0x100002125: game_in_cycle (in ./corewar)
==9192==    by 0x100002566: game_logic (in ./corewar)
==9192==    by 0x10000134B: start_game (in ./corewar)
==9192==    by 0x10000150F: main (in ./corewar)
==9192==  If you believe this happened as a result of a stack
==9192==  overflow in your program's main thread (unlikely but
==9192==  possible), you can try to increase the size of the
==9192==  main thread stack using the --main-stacksize= flag.
==9192==  The main thread stack size used in this run was 8388608.
==9192== 
==9192== HEAP SUMMARY:
==9192==     in use at exit: 16,353 bytes in 167 blocks
==9192==   total heap usage: 216 allocs, 49 frees, 21,957 bytes allocated
==9192== 
==9192== 104 bytes in 1 blocks are definitely lost in loss record 26 of 45
==9192==    at 0x10011C635: malloc (in /usr/local/Cellar/valgrind/HEAD-e0af3eb/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==9192==    by 0x100003BB6: init_process (in ./corewar)
==9192==    by 0x100003D03: init_processes (in ./corewar)
==9192==    by 0x1000014F7: main (in ./corewar)
==9192== 
==9192== 104 bytes in 1 blocks are definitely lost in loss record 27 of 45
==9192==    at 0x10011C635: malloc (in /usr/local/Cellar/valgrind/HEAD-e0af3eb/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==9192==    by 0x100003BB6: init_process (in ./corewar)
==9192==    by 0x100001B1F: g_fork (in ./corewar)
==9192==    by 0x100002251: game_in_cycle (in ./corewar)
==9192==    by 0x100002566: game_logic (in ./corewar)
==9192==    by 0x10000134B: start_game (in ./corewar)
==9192==    by 0x10000150F: main (in ./corewar)
==9192== 
==9192== LEAK SUMMARY:
==9192==    definitely lost: 208 bytes in 2 blocks
==9192==    indirectly lost: 0 bytes in 0 blocks
==9192==      possibly lost: 0 bytes in 0 blocks
==9192==    still reachable: 4,713 bytes in 7 blocks
==9192==         suppressed: 11,432 bytes in 158 blocks
==9192== Reachable blocks (those to which a pointer was found) are not shown.
==9192== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==9192== 
==9192== For lists of detected and suppressed errors, rerun with: -s
==9192== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 8 from 8)

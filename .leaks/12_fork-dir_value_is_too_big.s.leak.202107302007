==10764== Memcheck, a memory error detector
==10764== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10764== Using Valgrind-3.17.0.GIT and LibVEX; rerun with -h for copyright info
==10764== Command: ./corewar ../CORECHECKER/champs/unit_tests/test_op/12_fork-dir_value_is_too_big.cor
==10764== Parent PID: 10760
==10764== 
==10764== Invalid read of size 1
==10764==    at 0x100002104: read_op (in ./corewar)
==10764==    by 0x1000021F5: game_in_cycle (in ./corewar)
==10764==    by 0x100002626: game_logic (in ./corewar)
==10764==    by 0x10000145B: start_game (in ./corewar)
==10764==    by 0x10000161F: main (in ./corewar)
==10764==  Address 0x2049134bb is not stack'd, malloc'd or (recently) free'd
==10764== 
==10764== 
==10764== Process terminating with default action of signal 11 (SIGSEGV)
==10764==  Access not within mapped region at address 0x2049134BB
==10764==    at 0x100002104: read_op (in ./corewar)
==10764==    by 0x1000021F5: game_in_cycle (in ./corewar)
==10764==    by 0x100002626: game_logic (in ./corewar)
==10764==    by 0x10000145B: start_game (in ./corewar)
==10764==    by 0x10000161F: main (in ./corewar)
==10764==  If you believe this happened as a result of a stack
==10764==  overflow in your program's main thread (unlikely but
==10764==  possible), you can try to increase the size of the
==10764==  main thread stack using the --main-stacksize= flag.
==10764==  The main thread stack size used in this run was 8388608.
==10764== 
==10764== HEAP SUMMARY:
==10764==     in use at exit: 16,109 bytes in 167 blocks
==10764==   total heap usage: 216 allocs, 49 frees, 21,668 bytes allocated
==10764== 
==10764== 104 bytes in 1 blocks are definitely lost in loss record 27 of 45
==10764==    at 0x10011C635: malloc (in /usr/local/Cellar/valgrind/HEAD-e0af3eb/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==10764==    by 0x100003BB6: init_process (in ./corewar)
==10764==    by 0x100003D03: init_processes (in ./corewar)
==10764==    by 0x100001607: main (in ./corewar)
==10764== 
==10764== 104 bytes in 1 blocks are definitely lost in loss record 28 of 45
==10764==    at 0x10011C635: malloc (in /usr/local/Cellar/valgrind/HEAD-e0af3eb/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==10764==    by 0x100003BB6: init_process (in ./corewar)
==10764==    by 0x100001C02: g_fork (in ./corewar)
==10764==    by 0x100002321: game_in_cycle (in ./corewar)
==10764==    by 0x100002626: game_logic (in ./corewar)
==10764==    by 0x10000145B: start_game (in ./corewar)
==10764==    by 0x10000161F: main (in ./corewar)
==10764== 
==10764== LEAK SUMMARY:
==10764==    definitely lost: 208 bytes in 2 blocks
==10764==    indirectly lost: 0 bytes in 0 blocks
==10764==      possibly lost: 0 bytes in 0 blocks
==10764==    still reachable: 4,469 bytes in 7 blocks
==10764==         suppressed: 11,432 bytes in 158 blocks
==10764== Reachable blocks (those to which a pointer was found) are not shown.
==10764== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==10764== 
==10764== For lists of detected and suppressed errors, rerun with: -s
==10764== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 8 from 8)

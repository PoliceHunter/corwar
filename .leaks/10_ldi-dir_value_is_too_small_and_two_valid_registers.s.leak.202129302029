==67284== Memcheck, a memory error detector
==67284== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==67284== Using Valgrind-3.17.0.GIT and LibVEX; rerun with -h for copyright info
==67284== Command: ./corewar ../CORECHECKER/champs/unit_tests/test_op/10_ldi-dir_value_is_too_small_and_two_valid_registers.cor
==67284== Parent PID: 67280
==67284== 
==67284== Invalid read of size 1
==67284==    at 0x100002EA9: byte_to_int32_2 (in ./corewar)
==67284==    by 0x1000031A3: ldi (in ./corewar)
==67284==    by 0x100002321: game_in_cycle (in ./corewar)
==67284==    by 0x100002626: game_logic (in ./corewar)
==67284==    by 0x10000145B: start_game (in ./corewar)
==67284==    by 0x10000161F: main (in ./corewar)
==67284==  Address 0x20491349b is not stack'd, malloc'd or (recently) free'd
==67284== 
==67284== 
==67284== Process terminating with default action of signal 11 (SIGSEGV)
==67284==  Access not within mapped region at address 0x20491349B
==67284==    at 0x100002EA9: byte_to_int32_2 (in ./corewar)
==67284==    by 0x1000031A3: ldi (in ./corewar)
==67284==    by 0x100002321: game_in_cycle (in ./corewar)
==67284==    by 0x100002626: game_logic (in ./corewar)
==67284==    by 0x10000145B: start_game (in ./corewar)
==67284==    by 0x10000161F: main (in ./corewar)
==67284==  If you believe this happened as a result of a stack
==67284==  overflow in your program's main thread (unlikely but
==67284==  possible), you can try to increase the size of the
==67284==  main thread stack using the --main-stacksize= flag.
==67284==  The main thread stack size used in this run was 8388608.
==67284== 
==67284== HEAP SUMMARY:
==67284==     in use at exit: 15,904 bytes in 166 blocks
==67284==   total heap usage: 214 allocs, 48 frees, 21,429 bytes allocated
==67284== 
==67284== 104 bytes in 1 blocks are definitely lost in loss record 28 of 44
==67284==    at 0x10011C635: malloc (in /usr/local/Cellar/valgrind/HEAD-e0af3eb/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==67284==    by 0x100003BB6: init_process (in ./corewar)
==67284==    by 0x100003D03: init_processes (in ./corewar)
==67284==    by 0x100001607: main (in ./corewar)
==67284== 
==67284== LEAK SUMMARY:
==67284==    definitely lost: 104 bytes in 1 blocks
==67284==    indirectly lost: 0 bytes in 0 blocks
==67284==      possibly lost: 0 bytes in 0 blocks
==67284==    still reachable: 4,368 bytes in 7 blocks
==67284==         suppressed: 11,432 bytes in 158 blocks
==67284== Reachable blocks (those to which a pointer was found) are not shown.
==67284== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==67284== 
==67284== For lists of detected and suppressed errors, rerun with: -s
==67284== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 8 from 8)
